<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- 扫描类包以应用注解定义Bean ：自动扫描指定包下的组件 -->
<!-- 	<context:component-scan base-package="com.music" />
	
	<mvc:annotation-driven/> -->
	
	
	<!-- 使用创建Bean的方式来完成jdbc的数据库属性文件的使用 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 配置文件的位置 -->
		<property name="location" value="classpath:oracle.properties" />
	</bean>



	<!-- 创建一个dataSource对象，类型是dbcp中的BasicDataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 注入属性 (基本的属性 )的值 -->
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="100" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="400" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

	</bean>



	<!-- 创建SqlSessionFactoryBean对象，并给其注入一个属性DataSource，引用刚才定义好的DataSource -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- 注入一个dataSource -->
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/music/mapper/*.xml" />
	</bean>

	<!-- 可以把扫描到的Mapper接口变成Mapper对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.music.dao" />
		<!-- 配置一个Bean工厂对象 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 创建事务管理有关的bean -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 用到dataSource -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 文件上传有关的bean -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="50000000000"/>
		<property name="maxUploadSizePerFile" value="5000000000"/>
		<property name="defaultEncoding" value="utf-8"/>
	</bean>

	

</beans>